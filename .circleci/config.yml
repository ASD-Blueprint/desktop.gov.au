version: 2

references:
  cf_install: &cf_install
    run:
      name: Install cf-cli
      command: |
        sudo apt-get install apt-transport-https
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install cf-cli
  app_prereqs: &app_prereqs
    run:
      name: Application pre-requisites
      command: |
        sudo gem update --system
        gem install bundler
  build_site: &build_site
    run:
      name: Build site
      command: |
        bundle install --path=vendor/bundle
        JEKYLL_ENV=production bundle exec jekyll build
  docker_image: &docker_image
    docker:
      - image: circleci/ruby:2.6.6-stretch

jobs:
  deploy_feature_branch:
    <<: *docker_image
    steps:
      - checkout
      - *cf_install
      - *app_prereqs
      - *build_site
      - run:
          name: Deploy feature branch
          command: |
            cf login -a ${CF_API_STAGING} -o ${CF_ORG} -s ${CF_SPACE} -u ${CF_USERNAME} -p ${CF_PASSWORD_STAGING}
            cf push desktop-${CIRCLE_BRANCH} -f manifest-staging.yml

  deploy_to_staging:
    <<: *docker_image
    steps:
      - checkout
      - *cf_install
      - *app_prereqs
      - *build_site
      - run:
          name: Deploy to staging
          command: |
            cf login -a ${CF_API_STAGING} -o ${CF_ORG} -s ${CF_SPACE} -u ${CF_USERNAME} -p ${CF_PASSWORD_STAGING}
            cf push -f manifest-staging.yml

  deploy_to_production:
    <<: *docker_image
    steps:
      - checkout
      - *cf_install
      - *app_prereqs
      - *build_site
      - run:
          name: Deploy to production
          command: |
            cf login -a ${CF_API_PRODUCTION} -o ${CF_ORG} -s ${CF_SPACE} -u ${CF_USERNAME} -p ${CF_PASSWORD_PRODUCTION}
            cf push -f manifest-production.yml

workflows:
  version: 2
  feature:
    jobs:
      - deploy_feature_branch:
          filters:
            branches:
              only:
                - /feature-.*/
  staging:
    jobs:
      - deploy_to_staging:
          filters:
            branches:
              only:
                - develop
  master:
    jobs:
      - deploy_to_production:
          filters:
            branches:
              only:
                - master
