version: 2

references:
  netlify_install: &netlify_install
    run:
      name: Netlify pre-requisites
      command: |
        npm install netlify-cli
  app_prereqs: &app_prereqs
    run:
      name: Application pre-requisites
      command: |
        sudo gem update --system
        gem install bundler
        pwd
        ls
        bundle config --local path vendor/bundle
        bundle install
  integrate_search: &integrate_search
    run:
      name: Integrate with Algolia Search
      command: |
        echo "" >> _config.yml
        echo "algolia:" >> _config.yml
        echo "  application_id: \"${ALGOLIA_APPLICATION_ID}\"" >> _config.yml
        echo "  index_name: \"${ALGOLIA_INDEX_NAME}\"" >> _config.yml
        echo "  search_only_api_key: \"${ALGOLIA_SEARCH_ONLY_API_KEY}\"" >> _config.yml
        echo "  nodes_to_index: \"p\"" >> _config.yml
  integrate_web_analytics: &integrate_web_analytics
    run:
      name: Integrate with Google Analytics
      command: |
        echo "" >> _config.yml
        echo "google_analytics: \"${GOOGLE_ANALYTICS}\"" >> _config.yml
  index_site: &index_site
    run:
      name: Index content
      command: ALGOLIA_API_KEY="${ALGOLIA_ADMIN_API_KEY}" bundle exec jekyll algolia
  build_site: &build_site
    run:
      name: Build site
      command: |
        JEKYLL_ENV=production bundle exec jekyll build
  docker_image: &docker_image
    docker:
      - image: circleci/ruby:2.7.5-node

jobs:
  build_attachments:
    working_directory: ~/workspace
    docker:
      - image: "pandoc/latex:2.14.2"
    steps:
      - run:
          name: Install git-cli
          command: apk add git
      - checkout
      - run:
          name: Build docx and pdf files
          command: ./_util/export-documents.sh
      - persist_to_workspace:
          root: .
          paths:
            - .

  deploy_to_staging:
    <<: *docker_image
    steps:
      - attach_workspace:
          at: .
      - *netlify_install
      - *app_prereqs
      - *integrate_search
      - *build_site
      - run:
          name: Deploy to Netlify
          command: |
            npx netlify deploy --dir=_site

  deploy_to_production:
    <<: *docker_image
    steps:
      - attach_workspace:
          at: .
      - *netlify_install
      - *app_prereqs
      - *integrate_web_analytics
      - *integrate_search
      - *index_site
      - *build_site
      - run:
          name: Deploy to Netlify (production)
          command: |
            npx netlify deploy --dir=_site --prod

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_attachments:
          filters:
            branches:
              only:
                - /feature-.*/
                - develop
                - main
      - deploy_to_staging:
          requires:
            - build_attachments
          filters:
            branches:
              only:
                - /feature-.*/
                - develop
      - deploy_to_production:
          requires:
            - build_attachments
          filters:
            branches:
              only:
                - main
